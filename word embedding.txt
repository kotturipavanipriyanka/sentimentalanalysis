import tensorflow as tf
from tensorflow.keras.datasets import imdb
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding, Flatten, Dense
from tensorflow.keras.preprocessing.sequence import pad_sequences
# Set parameters
max_features = 10000  # Number of words to consider as features
maxlen = 100  # Cuts off texts after this number of words
embedding_dim = 100  # Dimensionality of the embedding space
# Load the IMDB dataset with word indices
(train_data, train_labels), (test_data, test_labels) = imdb.load_data(num_words=max_features)


# Pad sequences to ensure uniform length for input
train_data = pad_sequences(train_data, maxlen=maxlen)
test_data = pad_sequences(test_data, maxlen=maxlen)
# Build the model with word embeddings
model=Sequential([Embedding(input_dim=max_features,output_dim=embedding_dim,input_length=maxlen),Flatten(),Dense(32,activation='relu'),Dense(1,activation='sigmoid')])
# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
# Train the model
history = model.fit(train_data, train_labels, epochs=10, batch_size=32, validation_split=0.2)


# Evaluate the model
test_loss, test_acc = model.evaluate(test_data, test_labels)
print(f'Test accuracy:{test_acc}')

